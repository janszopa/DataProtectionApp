"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from decouple import config
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config("SECRET_KEY")

TOTP_ENCRYPTION_KEY = config('TOTP_ENCRYPTION_KEY')
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

#Ochrona przed atakami typu Clickjacking, dodaje nagłówek X-Frame-Options: DENY
X_FRAME_OPTIONS = 'DENY'

#Wymuszamy przesyłanie ciasteczek tylko przez HTTPS
SESSION_COOKIE_SECURE = True

#Ciasteczka nie dostępne z poziomu JavaScript, będą dostępne tylko dla serwera
SESSION_COOKIE_HTTPONLY = True

#Ograniczamy sposób przesyłania ciasteczek, Lax - 
SESSION_COOKIE_SAMESITE = 'Lax'

#CSP - Content Security Policy

#Wysyła nagłówek X-Content-Type-Options: nosniff, uniemożliwia przeglądarce zgadywanie typu pliku
SECURE_CONTENT_TYPE_NOSNIFF = True

#zasoby mogą być ładowane tylko z tej samej domeny
CSP_DEFAULT_SRC = ("'self'",)

# pozwalamy na ładowanie skryptów z tej samej domeny i inline w html, nie używam js więc tylko edukacjynie
#CSP_SCRIPT_SRC = ("'self'", "'unsafe-inline'")

# pozwalamy na ładowanie css z tej samej domeny i inline w html
CSP_STYLE_SRC = ("'self'", "'unsafe-inline'")

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'axes',
    'csp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'axes.middleware.AxesMiddleware',
    'csp.middleware.CSPMiddleware',
]

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

ROOT_URLCONF = 'app.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "app/templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'app.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': dj_database_url.config(
        default=config("DATABASE_URL")
    )
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
        'OPTIONS': {
            'user_attributes': ('username', 'email'),  # Atrybuty użytkownika, które porównujemy z hasłem
            'max_similarity': 0.7,  # Maksymalne dozwolone podobieństwo
        },
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', # Porównujemy hasło z domyślną listą Django, z najpowszechniejszymi hasłami 
    },
    {
        'NAME': 'app.validators.CustomPasswordValidator',
    },
]

PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher', 
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
]



# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CSRF_TRUSTED_ORIGINS = [
    'https://localhost',
]

AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend', 
    'django.contrib.auth.backends.ModelBackend',  # Domyślny backend Django
]

AXES_FAILURE_LIMIT = 10  
AXES_COOLOFF_TIME = 1  #w godzinach
AXES_LOCK_OUT_AT_FAILURE = True  
AXES_LOCKOUT_PARAMETERS = ['username']
AXES_CLIENT_IP_ATTRIBUTE = 'HTTP_X_FORWARDED_FOR' # proxy
AXES_RESET_ON_SUCCESS = True  

LOGIN_URL = '/'
